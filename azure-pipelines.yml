trigger:
  branches:
    include:
      - master
  paths:
    include:
      - A/**
      - B/**
      - C/**
      - D/**
      - E/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  SYSTEM_ACCESSTOKEN: $(System.AccessToken)

jobs:
- job: GetChangedFiles
  displayName: 'Get Changed Files'
  steps:
  - script: |
      echo ##vso[task.setvariable variable=changedFiles]$(git diff --name-only $(Build.SourceVersion^) $(Build.SourceVersion))
    displayName: 'Fetch Changed Files'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- job: Build_A
  displayName: Build A
  dependsOn: GetChangedFiles
  condition: and(succeeded(), or(contains(variables['changedFiles'], 'A/service1/'), contains(variables['changedFiles'], 'A/service2/'), contains(variables['changedFiles'], 'A/service3/')))
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      cd A/service1
      npm install
      npm run build
    displayName: 'Build A/service1'
  - script: |
      cd A/service2
      npm install
      npm run build
    displayName: 'Build A/service2'
  - script: |
      cd A/service3
      npm install
      npm run build
    displayName: 'Build A/service3'

- job: Build_B
  displayName: Build B
  dependsOn: GetChangedFiles
  condition: and(succeeded(), or(contains(variables['changedFiles'], 'B/service1/'), contains(variables['changedFiles'], 'B/service2/'), contains(variables['changedFiles'], 'B/service3/')))
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      cd B/service1
      npm install
      npm run build
    displayName: 'Build B/service1'
  - script: |
      cd B/service2
      npm install
      npm run build
    displayName: 'Build B/service2'
  - script: |
      cd B/service3
      npm install
      npm run build
    displayName: 'Build B/service3'

- job: Build_C
  displayName: Build C
  dependsOn: GetChangedFiles
  condition: and(succeeded(), or(contains(variables['changedFiles'], 'C/service1/'), contains(variables['changedFiles'], 'C/service2/'), contains(variables['changedFiles'], 'C/service3/')))
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      cd C/service1
      npm install
      npm run build
    displayName: 'Build C/service1'
  - script: |
      cd C/service2
      npm install
      npm run build
    displayName: 'Build C/service2'
  - script: |
      cd C/service3
      npm install
      npm run build
    displayName: 'Build C/service3'

- job: Build_D
  displayName: Build D
  dependsOn: GetChangedFiles
  condition: and(succeeded(), or(contains(variables['changedFiles'], 'D/service1/'), contains(variables['changedFiles'], 'D/service2/'), contains(variables['changedFiles'], 'D/service3/')))
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      cd D/service1
      npm install
      npm run build
    displayName: 'Build D/service1'
  - script: |
      cd D/service2
      npm install
      npm run build
    displayName: 'Build D/service2'
  - script: |
      cd D/service3
      npm install
      npm run build
    displayName: 'Build D/service3'

- job: Build_E
  displayName: Build E
  dependsOn: GetChangedFiles
  condition: and(succeeded(), or(contains(variables['changedFiles'], 'E/service1/'), contains(variables['changedFiles'], 'E/service2/'), contains(variables['changedFiles'], 'E/service3/')))
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      cd E/service1
      npm install
      npm run build
    displayName: 'Build E/service1'
  - script: |
      cd E/service2
      npm install
      npm run build
    displayName: 'Build E/service2'
  - script: |
      cd E/service3
      npm install
      npm run build
    displayName: 'Build E/service3'
